name: Lib - Build, Test and Report Sonar

on: 
  workflow_call:
    secrets:
      github-token:
        description: 'The GitHub PAT token to perform checkout and publish.'
        required: true
      cache-version:
        description: 'The Cache version.'
        required: true
      sonar-token:
        description: 'The Sonar Token.'
        required: true
    inputs:
      sln-file:
        description: 'The name of the project to build. Must match the directory name.'
        required: true
        type: string
      sonar-key:
        description: 'The name of the project to build. Must match the directory name.'
        required: true
        type: string
        
jobs:
  build:
    runs-on:
      group: window-runners

    steps:
    - name: â˜• Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          6.x
          8.x
    - name: ðŸ›Ž Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: ðŸ“¦ Cache
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: nuget-${{ secrets.cache-version }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          nuget-${{ secrets.cache-version }}-
    - name: âž• Add nugets source
      uses: unosquare/add-nuget-source@master 
      with:
        access-token: ${{ secrets.github-token }}
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar-${{ secrets.cache-version }}
        restore-keys: ${{ runner.os }}-sonar-${{ secrets.cache-version }}
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner-${{ secrets.cache-version }}
        restore-keys: ${{ runner.os }}-sonar-scanner-${{ secrets.cache-version }}
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Install dotnet coverage
      shell: powershell
      run: |
        dotnet tool install --global dotnet-coverage
    - name: Begin sonar scan
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ inputs.sonar-key }}" /o:"unosquare" /d:sonar.token="${{ secrets.sonar-token }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.github-token }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.sonar-token }}
      shell: powershell
      run: |
        dotnet build --nologo -v q --property WarningLevel=0 /clp:ErrorsOnly -c Release ${{ inputs.sln-file }}
    - name: Run tests
      shell: powershell
      run: |
        dotnet-coverage collect "dotnet test --no-restore --no-build -c Release ${{ inputs.sln-file }}" -f xml  -o "coverage.xml"
    - name: End sonar scan
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.sonar-token }}"
